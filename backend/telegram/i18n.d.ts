export type SupportedLanguage = 'en' | 'it';
export interface MessageKeys {
    'error.general': string;
    'error.invalid_symbol': string;
    'error.prediction_failed': string;
    'error.execution_failed': string;
    'error.vps_access_denied': string;
    'error.subscription_required': string;
    'welcome.back': string;
    'welcome.new_user': string;
    'setup.choose_mode': string;
    'setup.complete': string;
    'trading.scalping': string;
    'trading.intraday': string;
    'trading.swing': string;
    'help.title': string;
    'help.trading_commands': string;
    'help.vps_commands': string;
    'help.info_commands': string;
    'risk.enter_percentage': string;
    'risk.enter_balance': string;
    'risk.invalid_percentage': string;
    'risk.invalid_balance': string;
    'signal.title': string;
    'signal.confidence': string;
    'signal.position_sizing': string;
    'signal.risk_warning': string;
    'performance.title': string;
    'performance.stats': string;
    'performance.best_trade': string;
    'performance.worst_trade': string;
    'status.title': string;
    'status.systems_online': string;
    'status.account_info': string;
    'subscription.no_active': string;
    'subscription.expired': string;
    'subscription.features': string;
    'subscription.upgrade_info': string;
}
export declare function getMessage(key: keyof MessageKeys, language?: SupportedLanguage, params?: Record<string, string | number>): string;
export declare function getUserLanguage(userId: number): SupportedLanguage;
export declare function setUserLanguage(userId: number, language: SupportedLanguage): Promise<void>;
export declare function formatCurrency(amount: number, language?: SupportedLanguage): string;
export declare function formatPercentage(value: number, language?: SupportedLanguage): string;
export declare function formatNumber(value: number, language?: SupportedLanguage): string;
